---

- step:
    name: Checking imports (Humans Vs. Horses)
    image: tensorflow/tensorflow:2.2.2-gpu-py3
    environment: azure-westeurope-f2sv2
    command:
      - pip install --disable-pip-version-check -r requirements.txt
      - python checking_imports.py


- step:
    name: Preprocess dataset (Horses Vs. Humans)
    image: tensorflow/tensorflow:1.13.1-py3
    environment: azure-westeurope-f2sv2
    command:
      - pip install shutil
      - python preprocess.py
    inputs:
      - name: training-set-images
        default: datum://0178f908-8e2b-2f63-371a-9b61f91f8cdb
      - name: test-set-images
        default: datum://0178f908-93ff-5b6c-4fd2-f6bdf13532ed


- step:
    name: Train model (Horses Vs. Humans)
    image: tensorflow/tensorflow:2.2.2-py3
    environment: azure-westeurope-f2sv2
    command:
      - pip install --disable-pip-version-check -r requirements.txt
      - python train.py
    inputs:
      - name: training-set-images
        default: datum://0178f908-8e2b-2f63-371a-9b61f91f8cdb
      - name: test-set-images
        default: datum://0178f908-93ff-5b6c-4fd2-f6bdf13532ed
      - name: WEIGHTS
        default: https://valohaidemo.blob.core.windows.net/mnist/train-images-idx3-ubyte.gz

- step:
    name: Batch inference (MNIST)
    image: tensorflow/tensorflow:1.13.1-py3
    environment: azure-westeurope-f2sv2
    command:
      - pip install --disable-pip-version-check --quiet -r requirements.txt
      - python batch_inference.py {parameters}
    inputs:
      - name: model
      - name: images
        default:
          - https://valohaidemo.blob.core.windows.net/mnist/four-inverted.png
          - https://valohaidemo.blob.core.windows.net/mnist/five-inverted.png
          - https://valohaidemo.blob.core.windows.net/mnist/five-normal.jpg
    parameters:
      - name: output-best-model
        pass-as: --output-best-model={v}
        description: Save model to output folder
        type: flag
        default: True
      - name: model-dir
        pass-as: --model-dir={v}
        description: Directory for models
        type: string
        default: /valohai/inputs/model/
      - name: image-dir
        pass-as: --image-dir={v}
        description: Directory for image
        type: string
        default: /valohai/inputs/images/

- step:
    name: Compare predictions (MNIST)
    image: tensorflow/tensorflow:1.13.1-py3
    environment: azure-westeurope-f2sv2
    command: python compare.py {parameters}
    inputs:
      - name: predictions
      - name: models
        optional: True
    parameters:
      - name: prediction-dir
        pass-as: --prediction-dir={v}
        description: Directory for predictions
        type: string
        default: /valohai/inputs/predictions/

- step:
    name: Worker environment check
    image: tensorflow/tensorflow:1.13.1-py3
    environment: azure-westeurope-f2sv2
    command:
      - pwd
      - ls -la
      - python --version

- pipeline:
    name: Training Pipeline
    nodes:
      - name: preprocess
        type: execution
        step: Preprocess dataset (MNIST)
      - name: train
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: evaluate
        type: execution
        step: Batch inference (MNIST)
    edges:
      - [preprocess.output.*train-images*, train.input.training-set-images]
      - [preprocess.output.*train-labels*, train.input.training-set-labels]
      - [preprocess.output.*test-images*, train.input.test-set-images]
      - [preprocess.output.*test-labels*, train.input.test-set-labels]
      - [train.output.model*, evaluate.input.model]

- pipeline:
    name: Three-Trainings Pipeline
    nodes:
      - name: preprocess
        type: execution
        step: Preprocess dataset (MNIST)
      - name: train1
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: train2
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: train3
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: evaluate1
        type: execution
        step: Batch inference (MNIST)
      - name: evaluate2
        type: execution
        step: Batch inference (MNIST)
      - name: evaluate3
        type: execution
        step: Batch inference (MNIST)
      - name: find-best-model
        type: execution
        step: Compare predictions (MNIST)
    edges:
      - [preprocess.output.*train-images*, train1.input.training-set-images]
      - [preprocess.output.*train-labels*, train1.input.training-set-labels]
      - [preprocess.output.*test-images*, train1.input.test-set-images]
      - [preprocess.output.*test-labels*, train1.input.test-set-labels]
      - [preprocess.output.*train-images*, train2.input.training-set-images]
      - [preprocess.output.*train-labels*, train2.input.training-set-labels]
      - [preprocess.output.*test-images*, train2.input.test-set-images]
      - [preprocess.output.*test-labels*, train2.input.test-set-labels]
      - [preprocess.output.*train-images*, train3.input.training-set-images]
      - [preprocess.output.*train-labels*, train3.input.training-set-labels]
      - [preprocess.output.*test-images*, train3.input.test-set-images]
      - [preprocess.output.*test-labels*, train3.input.test-set-labels]
      - [train1.output.model*, evaluate1.input.model]
      - [train2.output.model*, evaluate2.input.model]
      - [train3.output.model*, evaluate3.input.model]
      - [evaluate1.output.*.json, find-best-model.input.predictions]
      - [evaluate2.output.*.json, find-best-model.input.predictions]
      - [evaluate3.output.*.json, find-best-model.input.predictions]
      - [evaluate1.output.model*, find-best-model.input.models]
      - [evaluate2.output.model*, find-best-model.input.models]
      - [evaluate3.output.model*, find-best-model.input.models]

- pipeline:
    name: Three-Trainings Pipeline with deployment
    nodes:
      - name: preprocess
        type: execution
        step: Preprocess dataset (MNIST)
      - name: train1
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: train2
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: train3
        type: execution
        step: Train model (MNIST)
        override:
          inputs:
            - name: training-set-images
            - name: training-set-labels
            - name: test-set-images
            - name: test-set-labels
      - name: evaluate1
        type: execution
        step: Batch inference (MNIST)
      - name: evaluate2
        type: execution
        step: Batch inference (MNIST)
      - name: evaluate3
        type: execution
        step: Batch inference (MNIST)
      - name: find-best-model
        type: execution
        step: Compare predictions (MNIST)
      - name: deploy
        type: deployment
        deployment: deployment-test
        endpoints:
          - predict-digit
    edges:
      - [preprocess.output.*train-images*, train1.input.training-set-images]
      - [preprocess.output.*train-labels*, train1.input.training-set-labels]
      - [preprocess.output.*test-images*, train1.input.test-set-images]
      - [preprocess.output.*test-labels*, train1.input.test-set-labels]
      - [preprocess.output.*train-images*, train2.input.training-set-images]
      - [preprocess.output.*train-labels*, train2.input.training-set-labels]
      - [preprocess.output.*test-images*, train2.input.test-set-images]
      - [preprocess.output.*test-labels*, train2.input.test-set-labels]
      - [preprocess.output.*train-images*, train3.input.training-set-images]
      - [preprocess.output.*train-labels*, train3.input.training-set-labels]
      - [preprocess.output.*test-images*, train3.input.test-set-images]
      - [preprocess.output.*test-labels*, train3.input.test-set-labels]
      - [train1.output.model*, evaluate1.input.model]
      - [train2.output.model*, evaluate2.input.model]
      - [train3.output.model*, evaluate3.input.model]
      - [evaluate1.output.*.json, find-best-model.input.predictions]
      - [evaluate2.output.*.json, find-best-model.input.predictions]
      - [evaluate3.output.*.json, find-best-model.input.predictions]
      - [evaluate1.output.model*, find-best-model.input.models]
      - [evaluate2.output.model*, find-best-model.input.models]
      - [evaluate3.output.model*, find-best-model.input.models]
      - [find-best-model.output.model.pb, deploy.file.predict-digit.model]

- endpoint:
    name: greet
    image: python:3.6
    port: 8000
    server-command: python -m wsgiref.simple_server

- endpoint:
    name: predict-digit
    description: predict digits from image inputs ("file" parameter)
    image: tensorflow/tensorflow:1.13.1-py3
    wsgi: predict_wsgi:predict_wsgi
    files:
      - name: model
        description: Model output file from TensorFlow
        path: model.pb
- endpoint:
    name: Horses Vs. Humans
    description: predict horse or human from image inputs
    image: tiangolo/uvicorn-gunicorn-fastapi:python3.7
    server-command: uvicorn predict:app --host 0.0.0.0 --port 8000
    files:
        - name: model
          description: Model output file from TensorFlow
          path: my_model.h5
